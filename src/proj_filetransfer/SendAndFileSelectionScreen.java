/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proj_filetransfer;

import AppPackage.AnimationClass;
import java.awt.Color;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Poras
 */
public class SendAndFileSelectionScreen extends javax.swing.JPanel {

    /**
     * Creates new form SendAndFileSelectionScreen
     */
    //Declarations
    Timer tt = null;
    static SendAndFileSelectionScreen abc = null;
    TCP_Server Tserver = null;
    FileTrans obj = null;
    ArrayList<File> ar = new ArrayList();
    int FileCount = 0;
    UDP_Server Userver1, Userver;
    static public volatile int x = 0;
    static public volatile int max = 0;

    //Constructor
    public SendAndFileSelectionScreen() {
        initComponents();
        this.setVisible(true);
        jLabel2.setVisible(true);
        jLabel2.setBounds(0, 0, 640, 360);
        jLabel3.setVisible(true);
        jLabel3.setLocation(jLabel2.getWidth() - jLabel3.getWidth(), jLabel2.getHeight() - jLabel3.getHeight());
        jButton7.setVisible(true);
        abc = this;
        tt = new Timer();
        tt.schedule(new java.util.TimerTask() {
            @Override
            public void run() {
                SendAndFileSelectionScreen.getInstance().create();
                this.cancel();
            }
        }, 1000);
    }

    static SendAndFileSelectionScreen getInstance() {
        return abc;
    }

    public void setMax(int i) {
        jProgressBar1.setMaximum(i);
    }

    public void setVal(int i) {
        jProgressBar1.setValue(i);
    }

    //Connection Start
    public void create() {
        UDP_Server.setFlag(true);
        Userver1 = new UDP_Server("Thread2");
        //System.out.println("Thread2 Started");
        Userver = new UDP_Server("Thread1");

        Userver.start();
        Userver1.start();
        try {
            Tserver = new TCP_Server(6666);
            //Userver.readData();
            //Userver.ShutDown();
            Tserver.start();
            //TCP Connection
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        AnimationClass ac = new AnimationClass();
        ac.jLabelYUp(0, -jLabel2.getHeight(), 2, 1, jLabel2);
        ac.jLabelYUp(0, -jLabel3.getHeight(), 2, 1, jLabel3);
        this.setBounds(0, 0, 640, 360);
        jTextPane1.setBackground(Color.BLACK);
        jButton7.setEnabled(false);
        jButton7.setVisible(false);
        jTextPane1.setText("Connected to : " + Tserver.GetSocket().getInetAddress().getHostName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(6, 231, 236));
        setFont(new java.awt.Font("Transformers Movie", 0, 14)); // NOI18N
        setMaximumSize(new java.awt.Dimension(640, 360));
        setMinimumSize(new java.awt.Dimension(640, 360));
        setPreferredSize(new java.awt.Dimension(640, 360));
        setLayout(null);

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Transformers Movie", 0, 24)); // NOI18N
        jButton7.setForeground(new java.awt.Color(6, 231, 236));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj_filetransfer/back.png"))); // NOI18N
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7);
        jButton7.setBounds(0, 0, 85, 37);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Transformers Movie", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(6, 231, 236));
        jLabel3.setText("Waiting For Connection.......");
        add(jLabel3);
        jLabel3.setBounds(0, 0, 223, 24);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Transformers Movie", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(6, 231, 236));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj_filetransfer/waiting.gif"))); // NOI18N
        jLabel2.setText("Waiting For Connection.......");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 867, 360);

        jProgressBar1.setBackground(new java.awt.Color(0, 0, 0));
        jProgressBar1.setForeground(new java.awt.Color(6, 231, 236));
        jProgressBar1.setToolTipText("");
        jProgressBar1.setBorderPainted(false);
        jProgressBar1.setMaximumSize(new java.awt.Dimension(146, 14));
        jProgressBar1.setMinimumSize(new java.awt.Dimension(146, 14));
        jProgressBar1.setOpaque(true);
        add(jProgressBar1);
        jProgressBar1.setBounds(190, 300, 390, 30);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Transformers Movie", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(6, 231, 236));
        jLabel1.setText("Transfering Image1...........(50.00%)");
        add(jLabel1);
        jLabel1.setBounds(190, 260, 390, 40);

        jCheckBox1.setBackground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setFont(new java.awt.Font("Transformers Movie", 0, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(6, 231, 236));
        jCheckBox1.setText("Send Compressed");
        add(jCheckBox1);
        jCheckBox1.setBounds(10, 200, 180, 33);

        jCheckBox2.setBackground(new java.awt.Color(0, 0, 0));
        jCheckBox2.setFont(new java.awt.Font("Transformers Movie", 0, 18)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(6, 231, 236));
        jCheckBox2.setText("Send Encrypted");
        add(jCheckBox2);
        jCheckBox2.setBounds(10, 170, 180, 33);

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Transformers Movie", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(6, 231, 236));
        jButton3.setText("ADD FILES");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(10, 100, 150, 50);

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj_filetransfer/delete.png"))); // NOI18N
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        add(jButton4);
        jButton4.setBounds(580, 110, 50, 30);

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Transformers Movie", 1, 36)); // NOI18N
        jButton5.setForeground(new java.awt.Color(6, 231, 236));
        jButton5.setText("Photonify");
        jButton5.setToolTipText("");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5);
        jButton5.setBounds(0, 240, 190, 60);

        jTextPane1.setBackground(new java.awt.Color(0, 0, 0));
        jTextPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        jTextPane1.setFont(new java.awt.Font("Transformers Movie", 0, 18)); // NOI18N
        jTextPane1.setForeground(new java.awt.Color(6, 231, 236));
        jTextPane1.setText("Connected To :");
        jTextPane1.setCaretColor(new java.awt.Color(6, 231, 236));
        jTextPane1.setFocusable(false);
        jTextPane1.setMaximumSize(new java.awt.Dimension(85, 30));
        jTextPane1.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextPane1.setSelectionColor(new java.awt.Color(6, 231, 236));
        jScrollPane2.setViewportView(jTextPane1);

        add(jScrollPane2);
        jScrollPane2.setBounds(190, 60, 390, 50);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Transformers Movie", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(6, 231, 236));
        jButton1.setText("_");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setMaximumSize(new java.awt.Dimension(45, 29));
        jButton1.setMinimumSize(new java.awt.Dimension(45, 29));
        jButton1.setPreferredSize(new java.awt.Dimension(45, 29));
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(550, 0, 45, 30);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Transformers Movie", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(6, 231, 236));
        jButton2.setText("X");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(595, 0, 47, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj_filetransfer/allPageHeader.png"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(130, 0, 370, 40);

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Transformers Movie", 0, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(6, 231, 236));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proj_filetransfer/back.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6);
        jButton6.setBounds(0, 50, 90, 40);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setFont(new java.awt.Font("Transformers Movie", 1, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(6, 231, 236));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Filename", "Path", "Size(kb)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setPreferredSize(new java.awt.Dimension(225, 48));
        jScrollPane3.setViewportView(jTable1);

        add(jScrollPane3);
        jScrollPane3.setBounds(190, 120, 390, 140);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DataOutputStream dos = null;
        if (FileCount > 0) {
            try {
                dos = new DataOutputStream(Tserver.GetSocket().getOutputStream());
            } catch (IOException ex) {
                Logger.getLogger(SendAndFileSelectionScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            String str = "";
            if (jCheckBox1.isSelected()) {
                obj = new Compress();
                try {
                    str = "2";
                    dos.write(str.getBytes(), 0, str.getBytes().length);

                } catch (IOException ex) {
                    Logger.getLogger(SendAndFileSelectionScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jCheckBox2.isSelected()) {
                try {
                    str = "3";
                    dos.write(str.getBytes(), 0, str.getBytes().length);

                } catch (IOException ex) {
                    Logger.getLogger(SendAndFileSelectionScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
                obj = new Cipher_IO();
            } else {
                try {
                    str = "1";
                    dos.write(str.getBytes(), 0, str.getBytes().length);

                } catch (IOException ex) {
                    Logger.getLogger(SendAndFileSelectionScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
                obj = new FileIO();
            }
            for (File f : ar) {
                obj.addFile(f);
            }
            max = (int) obj.Transize();
            jProgressBar1.setMaximum(max);
            System.out.println("ggooole" + max);
            jProgressBar1.setValue(30000);
            Timer t = new Timer();
            t.schedule(new TimerTask() {
                @Override
                public void run() {
                    jProgressBar1.setValue(x);
                    jProgressBar1.repaint();
                    jLabel1.setText("" + (x * 100) / max);

                    System.out.println("X=" + x);
                }
            }, 1000L);
            obj.setSocket(Tserver.GetSocket());
            try {
                obj.SendFile();
            } catch (Exception ex) {
                Logger.getLogger(SendAndFileSelectionScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a file to  Send!");
            return;
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
          // TODO add your handling code here:
//        int tmp= JOptionPane.showConfirmDialog(this, null, "Are you sure you want to go?"
//                            + " \n you will lose connection", JOptionPane.YES_NO_OPTION);
//        if(tmp == JOptionPane.YES_OPTION)
            tt.cancel();
            Userver.close();
        try {
            Tserver.closeSocket();
        } catch (IOException ex) {
            Logger.getLogger(SendAndFileSelectionScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
            Tserver=null;
            Userver=null;
            Userver1=null;
            this.setVisible(false);
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser j1 = new JFileChooser();
        j1.setMultiSelectionEnabled(true);
        if (JFileChooser.APPROVE_OPTION == j1.showOpenDialog(this)) {
            int i = 0;
            for (File f : j1.getSelectedFiles()) {
                ar.add(f);
                FileCount++;

            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        tt.cancel();
        Userver.close();
        //Userver1.ShutDown();
        this.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private volatile javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private volatile javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

}
